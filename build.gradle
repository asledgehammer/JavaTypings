plugins {
    id 'java'
    id 'application'
}
application {
    mainClassName = 'com.asledgehammer.pipewrench.PipeWrench'
}

compileJava {
    sourceCompatibility '16'
    targetCompatibility '16'
}

jar {
    manifest {
        attributes(
                'Main-Class': 'com.asledgehammer.pipewrench.PipeWrench'
        )
    }
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    google()
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    compileOnly 'com.yworks:yguard:3.1.0'
    // https://mavenlibs.com/maven/dependency/net.sourceforge.argparse4j/argparse4j
    implementation 'net.sourceforge.argparse4j:argparse4j:0.9.0'
    // PZ Libraries
    implementation fileTree(dir: 'lib', include: ['*.jar'])
    implementation 'org.jetbrains:annotations:24.0.0'
// https://mvnrepository.com/artifact/junit/junit
    testImplementation 'junit:junit:4.4'

}

task obfuscate {
    group 'yGuard'
    description 'Obfuscates and shrinks the java archive.'

    doLast {
        ant.taskdef(
                name: 'yguard',
                classname: 'com.yworks.yguard.YGuardTask',
                classpath: sourceSets.main.compileClasspath.asPath
        )

        def archivePath = jar.archiveFile.get().asFile.path
        println(archivePath)
        println(archivePath.replace(".jar", "_obf.jar"))
        ant.yguard {
            inoutpair(in: archivePath, out: "PipeWrench_Java_Typings.jar") {

            }
            attribute(name: "Deprecated")
            rename(mainclass: 'com.asledgehammer.pipewrench.PipeWrench', logfile: "${buildDir}/yguard.log.xml", replaceClassNameStrings: true) {
//                keep {
//                    'class'(classes: 'public', methods: 'public', fields: 'public')
//                }
            }
        }
    }
}